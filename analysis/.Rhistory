?Sys.getenv
Sys.getenv("NEW_DATA_FOLDER")
Sys.getenv(c("R_HOME", "R_PAPERSIZE", "R_PRINTCMD", "HOST"))
getwd()
list.files()
getwd()
setwd("/run/user/1000/gvfs/sftp:host=cri-syncmon.cri.uchicago.edu,user=t.cri.yuwenliu/group/xhe-lab/yanyul/519_family/lib/")
list.files()
getwd()
setwd("/run/user/1000/gvfs/sftp:host=cri-syncmon.cri.uchicago.edu,user=t.cri.yuwenliu/group/xhe-lab/yanyul/519_family/data/")
test = readRDS("gene_list_map.rds")
head(test)
dim(test)
setwd("/media/yuwen/Elements/Tiao_Seq/analysis")
mc5_48_plus = read.delim("../data/Data/160620/He-Lu-6_5mC-jump-48ng-S6_L004_R1_001.adaptor_removed.bam.plus_sites_with_1_coverage.ave.perbase", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
mc5_24_plus = read.delim("../data/Data/160620/He-Lu-7_5mC-jump-24ng-S7_L004_R1_001.adaptor_removed.bam.plus_sites_with_1_coverage.ave.perbase", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
mc5_12_plus = read.delim("../data/Data/160620/He-Lu-8_5mc-jump-12ng-S8_L004_R1_001.adaptor_removed.bam.plus_sites_with_1_coverage.ave.perbase", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
mc5_6_plus = read.delim("../data/Data/160620/He-Lu-9_5mc-jump-6ng-S9_L004_R1_001.adaptor_removed.bam.plus_sites_with_1_coverage.ave.perbase", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
mc5_2.4_plus = read.delim("../data/Data/160620/He-Lu-10_5mc-jump-2.4ng-S10_L004_R1_001.adaptor_removed.bam.plus_sites_with_1_coverage.ave.perbase", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
knitr::opts_chunk$set(fig.width = 10,fig.height = 5)
options(warn=-1)
mc5_plus = cbind(mc5_48_plus,mc5_24_plus,mc5_12_plus,mc5_6_plus,mc5_2.4_plus)
head(mc5_plus)
orgnize_table <-function(data, m = dim(data)[2], name = NA, range = seq(-100,100,1)){
#data is a table in which each column represents under one condition the counts of 5' end of reads across -100 to +100 of hydroxymethylation sites
# m is how many conditions you want to put into one table
# name is a vector giving the names for each condition
# range is the range of base-distance upstream and downstream to methylation sites
colnames(data) = name
data = data.frame(data, position = range)
data2 = as.data.frame(cbind(apply(data[,1:m],2,function(x){x/sum(x)}),position = data$position)) # normalize for each column of the first 5
data2 = reshape(data2, varying = list(1:m),v.names = "count",idvar = "position",times = name,direction = "long")
data1 = reshape(data, varying = list(1:m),v.names = "count",idvar = "position",times = name,direction = "long")
data1$time = factor(data1$time, levels = name)
data2$time = factor(data2$time, levels = name)
list(original = data1, normalized = data2)
}
test = orgnize_table(mc5_plus)
diim(mc5_plus)
dim(mc5_plus)
test = orgnize_table(mc5_plus,5,c("1","2","3","4","5"),seq(-100,100,1))
draw_plost_together(test, 5, c("1","2","3","4","5"), seq(-100,100,1))
head(test)
head(test)
dim(test)
dim(test$original)
head(test$original)
draw_plot_together <-function(test){
#test is the list returned from organize_table function
# will draw two plots, one is from original number, the other is from normalized data
ggplot(aes(x = position, y = count, color = time), data = test$original)+geom_line()+scale_color_discrete(guide = guide_legend(title = "Condition"))+xlim(-50,50)+theme_classic()+theme(axis.text.x = element_text(size =10, color = "black",hjust = 1, vjust = 1), axis.text.y = element_text(size =10, color = "black"),legend.position = c(.9, .8))+xlab("Distance")+ylab("Count")
ggplot(aes(x = position, y = count, color = time), data = test$normalized)+geom_line()+scale_color_discrete(guide = guide_legend(title = "Condition"))+xlim(-50,50)+theme_classic()+theme(axis.text.x = element_text(size =10, color = "black",hjust = 1, vjust = 1), axis.text.y = element_text(size =10, color = "black"),legend.position = c(.9, .8))+xlab("Distance")+ylab("Count")
}
draw_plot_together(test)
library(ggplot2)
draw_plot_together(test)
head(test)
head(test$original)
plots <- list()  # new empty list
for (time in unique(test$original$time)) {
p1 = ggplot(aes(x = position, y = count), data = test$original[test$original$time == time,])+geom_line()+ggtitle(time)+xlim(-50,50)+theme_classic()+theme(axis.text.x = element_text(size =10, color = "black", hjust = 1, vjust = 1), axis.text.y = element_text(size =10, color = "black"))
plots[['time']] <- p1  # add each plot into plot list
}
multiplot(plotlist = plots, cols = 2)
library(Rmisc)
library(Rmisc)
multiplot(plotlist = plots, cols = 2)
plots <- list()  # new empty list
for (time in unique(test$original$time)) {
p1 = ggplot(aes(x = position, y = count), data = test$normazlied[test$normalized$time == time,])+geom_line()+ggtitle(time)+xlim(-50,50)+theme_classic()+theme(axis.text.x = element_text(size =10, color = "black", hjust = 1, vjust = 1), axis.text.y = element_text(size =10, color = "black"))
plots[['time']] <- p1  # add each plot into plot list
}
multiplot(plotlist = plots, cols = 2)
head(test$normalized)
unique(test$normalized$time)
for (time in unique(test$normalized$time)) {
time
}
for (time in unique(test$normalized$time)) {
print(time)
}
setwd("/media/yuwen/Elements/Tiao_Seq/analysis")
source("../draw_reads_distribution.R")
source("../lib/draw_reads_distribution.R")
setwd("/media/yuwen/Elements/Tiao_Seq/analysis")
a = read.delim("../data/Data/160811/20160811_5hmC_Jump_Seq_1.2ng.umi_encoded_adaptor_removed.sorted.dedup.bam.minus_sites_with_1_coverage.ave.perbase", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
b = read.delim("../data/Data/160811/20160811_5hmC_Jump_Seq_0.6ng.umi_encoded_adaptor_removed.sorted.dedup.bam.minus_sites_with_1_coverage.ave.perbase", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
c = read.delim("../data/Data/160811/20160811_5mC_Jump_Seq_48ng.umi_encoded_adaptor_removed.sorted.dedup.bam.minus_sites_with_1_coverage.ave.perbase", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
d = read.delim("../data/Data/160811/20160811_5mC_Jump_Seq_24ng.umi_encoded_adaptor_removed.sorted.dedup.bam.minus_sites_with_1_coverage.ave.perbase", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
e = read.delim("../data/Data/160811/20160811_5mC_Jump_Seq_12ng.umi_encoded_adaptor_removed.sorted.dedup.bam.minus_sites_with_1_coverage.ave.perbase", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
f = read.delim("../data/Data/160811/20160811_5mC_Jump_Seq_6ng.umi_encoded_adaptor_removed.sorted.dedup.bam.minus_sites_with_1_coverage.ave.perbase", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
g = read.delim("../data/Data/160811/20160811_5mC_Jump_Seq_2.4ng.umi_encoded_adaptor_removed.sorted.dedup.bam.minus_sites_with_1_coverage.ave.perbase", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
data = cbind(a,b,c,d,e,f,g)
test = orgnize_table(data,6,c("5hmc-1.2ng","5hmc-0.6ng","5mc-48ng","5mc-24ng","5mc-12ng","5mc-6ng","5mc-2.4ng"),seq(-100,100,1))
test = orgnize_table(data,7,c("5hmc-1.2ng","5hmc-0.6ng","5mc-48ng","5mc-24ng","5mc-12ng","5mc-6ng","5mc-2.4ng"),seq(-100,100,1))
